; Lines starting with "#" are defaults

[server]
; ### ip (0.0.0.0) ###
; IP to bind server
#ip: 0.0.0.0

; ### port (15651) ###
; Port to bind server
#port: 15651

; ### ssl (false) ###
; Use SSL for server communication
#ssl: false

; ### sslcert (no default) ###
; Read server key and certificate from this file
;sslcert: server.pem

; ### pidfile (/var/run/nagixsc_httpd.pid) ###
; Where to store pid file if daemonizing
#pidfile: /var/run/nagixsc_httpd.pid

; ### enable_executor (false) ###
; If check executor (conf2http) should be enabled
enable_executor: True

; ### enable_acceptor (false) ###
; If check result acceptor (http2nagios) should be enabled
enable_acceptor: True


[executor]
; ### conf_dir (no default) ###
; Directory where your config files are stored
;
; Absolute file names recommended, but for quick start it is set relative
; to source directory
conf_dir: ./sample-configs/conf

; ### remote_administration (false) ###
; Allow remote administration of conf files (see above)
#remote_administration: false

; ### livestatus_socket (no default) ###
; Query mk-livestatus (http://mathias-kettner.de/checkmk_livestatus.html)
; "livestatus_socket" could be
;   - local path and filename of socket ("/var/lib/nagios3/rw/live.sock")
;   - IPv4 address and port ("127.0.0.1:6557")
;   - IPv6 address and port ("[::1]:6557" or "::1:6557")
;   - DNS resolvable name and port ("localhost:6557") - could be IPv4 *or* IPv6!
;
; Examples:
livestatus_socket: /var/lib/nagios3/rw/live
;livestatus_socket: /usr/local/nagios/var/rw/live
;livestatus_socket: 127.0.0.1:6557
;livestatus_socket: [::1]:6557
;livestatus_socket: localhost:6557


[executor/users]
; All users who are allowed to connect and request informations are stored here.
; Passwords must be md5 encrypted, for example in shell use:
; echo -n "Password" | md5sum -
nagixsc: 019b0966d98fb71d1a4bc4ca0c81d5cc ; PW: nagixsc


[executor/admins]
; FIXME - To be implemented
; Passwords must be md5 encrypted, for example in shell use:
; echo -n "Password" | md5sum -
;nagixscadmin: b1218f538a59ef7e5173978e160032b2 ; PW: nagixscadmin


[acceptor]
; ### mode (no default) ###
; Write checkresult files ("checkresult") or
; write passive checks to command file/pipe ("passive")
mode: checkresult

; ### checkresult_dir (no default) ###
; Path to Nagios/Icinga checkresult dir
;
; For Debian Nagios packages set to "/var/lib/nagios3/spool/checkresults"
; For Debian Icinga packages set to "/var/lib/icinga/spool/checkresults"
; For local compiled Nagios set to "/usr/local/nagios/var/spool/checkresults"
; For local compiled Icinga set to "/usr/local/icinga/var/spool/checkresults"
;
; For quick start and testing set to "/tmp/checkresults"
; (mkdir ""/tmp/checkresults")
checkresult_dir: /tmp/checkresults

; ### commandfile_path (no default) ###
; Path and name of Nagios/Icinga command file/pipe
;
; For Debian Nagios packages set to "/var/lib/nagios3/rw/nagios.cmd"
; For Debian Icinga packages set to "/var/lib/icinga/rw/icinga.cmd"
; For local compiled Nagios set to "/usr/local/nagios/var/rw/nagios.cmd"
; For local compiled Icinga set to "/usr/local/icinga/var/rw/icinga.cmd"
;
; For quick start and testing set to "/tmp/test.cmd"
; ("touch /tmp/test.cmd")
commandfile_path: /var/lib/nagios3/rw/nagios.cmd

; ### acl (false) ###
; Use ACLs to check if the user is allowed to submit check results for this
; host
#acl: false


[acceptor/users]
; All users who are allowed to connect and post informations are stored here.
; Passwords must be md5 encrypted, for example in shell use:
; echo -n "Password" | md5sum -
nagixsc: 019b0966d98fb71d1a4bc4ca0c81d5cc ; PW: nagixsc


[acceptor/acl_allowed_hosts_list]
; (List of) allowed host(s) per user
; Option "acl" in section "server" must be set to "true"!
;
; Format: <username>: <hostname1> [, <hostname2> [, <hostname3> [...]]]
;
; Example (allow only "host1" for "nagixsc"):
;nagixsc: host1 ; "host2.foo.bar" of sample config not allowed


[acceptor/acl_allowed_hosts_re]
; Regular Expression of allowed host(s) per user
; Option "acl" in section "server" must be set to "true"!
;
; ATTENTION!
; - Needs more testing!
; - Python Regular Expressions, see http://docs.python.org/library/re.html
;
; Format: <username>: <regexp>
;
; Example (allow only "host1" for "nagixsc", same as above in "acl_allowed_hosts_list"):
;nagixsc: ^host1$
